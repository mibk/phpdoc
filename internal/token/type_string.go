// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Newline-2]
	_ = x[Whitespace-3]
	_ = x[Ident-4]
	_ = x[Tag-5]
	_ = x[Var-6]
	_ = x[String-7]
	_ = x[Int-8]
	_ = x[Other-9]
	_ = x[symbolStart-10]
	_ = x[OpenDoc-11]
	_ = x[CloseDoc-12]
	_ = x[Asterisk-13]
	_ = x[Backslash-14]
	_ = x[Qmark-15]
	_ = x[Lparen-16]
	_ = x[Rparen-17]
	_ = x[Lbrack-18]
	_ = x[Rbrack-19]
	_ = x[Lbrace-20]
	_ = x[Rbrace-21]
	_ = x[Lt-22]
	_ = x[Gt-23]
	_ = x[Comma-24]
	_ = x[Colon-25]
	_ = x[Ellipsis-26]
	_ = x[Or-27]
	_ = x[And-28]
	_ = x[symbolEnd-29]
	_ = x[keywordStart-30]
	_ = x[This-31]
	_ = x[Array-32]
	_ = x[Callable-33]
	_ = x[Static-34]
	_ = x[keywordEnd-35]
}

const _Type_name = "IllegalEOF\\nWhitespaceIdentTagVarStringIntOthersymbolStart/***/*\\?()[]{}<>,:...|&symbolEndkeywordStart$thisarraycallablestatickeywordEnd"

var _Type_index = [...]uint8{0, 7, 10, 12, 22, 27, 30, 33, 39, 42, 47, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 90, 102, 107, 112, 120, 126, 136}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
