// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Newline-1]
	_ = x[Whitespace-2]
	_ = x[symbolStart-3]
	_ = x[OpenDoc-4]
	_ = x[CloseDoc-5]
	_ = x[Asterisk-6]
	_ = x[Backslash-7]
	_ = x[Query-8]
	_ = x[Lparen-9]
	_ = x[Rparen-10]
	_ = x[Lbrack-11]
	_ = x[Rbrack-12]
	_ = x[Lbrace-13]
	_ = x[Rbrace-14]
	_ = x[Lt-15]
	_ = x[Gt-16]
	_ = x[Comma-17]
	_ = x[Colon-18]
	_ = x[Ellipsis-19]
	_ = x[Or-20]
	_ = x[And-21]
	_ = x[symbolEnd-22]
	_ = x[Array-23]
	_ = x[Ident-24]
	_ = x[TagName-25]
	_ = x[VarName-26]
	_ = x[Decimal-27]
	_ = x[Other-28]
}

const _Type_name = "EOF\\nWhitespacesymbolStart/***/*\\?()[]{}<>,:...|&symbolEndarrayIdentTagNameVarNameDecimalOther"

var _Type_index = [...]uint8{0, 3, 5, 15, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 63, 68, 75, 82, 89, 94}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
